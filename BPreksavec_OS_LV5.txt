**Zadatak 1**
student08@linux:~$ nano LV5_1
//////////////////////////////////////////////////////////////////////////////////////
#include<stdio.h>
#include<stdlib.h>
#define MAX 10

typedef struct {
int pid;
int arrival;
int burst;
int completion;
} Proces;

void prvi5(Proces procesi[], int n) {

int currently = 0;
int i=0;
printf("PID\tarrival\tburst\tcompletion\n");
for(i=0; i if(currently < procesi[i].arrival) {
currently = procesi[i].arrival;
}
procesi[i].completion = currently + procesi[i].burst;
printf("%d\t%d\t%d\t%d\n", procesi[i].pid, procesi[i].arrival, procesi[i].burst, procesi[i].completion);
currently = procesi[i].completion;
}
}

int main() {
int n;
int i=0;
Proces procesi[MAX];

printf("Number of processes:");
scanf("%d", &n);

if(n > MAX ) {
printf("nemo≈° tolko buraz\n");
return 1;
}

printf("Arrival and burst time for every process:\n");
for(i=0; i procesi[i].pid = i+1;
printf("process %d:\n", procesi[i].pid);
printf("Arrival time: ");
scanf("%d", &procesi[i].arrival);
printf("Burst time: ");
scanf("%d", &procesi[i].burst);
}
prvi5(procesi, n);

return 0;
}
///////////////////////////////////////////////////////////////////////
student08@linux:~$ ./LV5prvi
Number of processes: 3
Arrival and burst time for every process:
process 1:
Arrival time: 2
Burst time: 3
process 2:
Arrival time: 4
Burst time: 5
process 3:
Arrival time: 6
Burst time: 7
PID arrival burst completion
1 	2 	3 	5
2 	4 	5 	10
3 	6 	7 	17

**Zadatak 2**
